<!DOCTYPE html>
<html>
<head>
  <title>Temperature Monitor</title>
  <style>
    body {
      font-family: Arial, sans-serif;
      text-align: center;
      background: #f0f8ff;
      padding-top: 50px;
    }
    #temperature {
      font-size: 48px;
      color: #333;
      margin-top: 20px;
    }
    canvas {
      margin-top: 40px;
      width: 90%;
      max-width: 800px;
      height: 400px;
    }
    button {
      padding: 12px 24px;
      font-size: 18px;
      cursor: pointer;
      background-color: #4CAF50;
      color: white;
      border: none;
      border-radius: 8px;
    }
    button:hover {
      background-color: #45a049;
    }
  </style>
</head>
<body>
  <h1>Live Temperature Monitor üå°Ô∏è</h1>
  <button onclick="connectSerial()">Connect to Serial</button>
  <div id="temperature">-- ¬∞C</div>
  <canvas id="tempChart"></canvas>

  <!-- Chart.js CDN -->
  <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>

  <script>
    const ctx = document.getElementById('tempChart').getContext('2d');
    const data = {
      labels: [],
      datasets: [{
        label: 'Temperature (¬∞C)',
        data: [],
        borderColor: 'rgb(255, 99, 132)',
        backgroundColor: 'rgba(255, 99, 132, 0.2)',
        fill: true,
        tension: 0.3
      }]
    };

    const config = {
      type: 'line',
      data: data,
      options: {
        responsive: true,
        scales: {
          x: {
            display: true,
            title: {
              display: true,
              text: 'Time'
            }
          },
          y: {
            suggestedMin: 0,
            suggestedMax: 100,
            title: {
              display: true,
              text: 'Temperature (¬∞C)'
            }
          }
        }
      }
    };

    const tempChart = new Chart(ctx, config);

    async function connectSerial() {
      try {
        const port = await navigator.serial.requestPort();
        await port.open({ baudRate: 9600 });

        const decoder = new TextDecoderStream();
        port.readable.pipeTo(decoder.writable);
        const input = decoder.readable.getReader();

        while (true) {
          const { value, done } = await input.read();
          if (done) break;
          if (value) {
            const clean = value.trim();
            const number = parseFloat(clean);
            if (!isNaN(number)) {
              const now = new Date().toLocaleTimeString();
              document.getElementById("temperature").textContent = `${number.toFixed(2)} ¬∞C`;

              data.labels.push(now);
              data.datasets[0].data.push(number);

              // Keep the chart to the last 20 points
              if (data.labels.length > 20) {
                data.labels.shift();
                data.datasets[0].data.shift();
              }

              tempChart.update();
            }
          }
        }

        input.releaseLock();
      } catch (err) {
        alert("Serial connection failed: " + err);
      }
    }
  </script>
</body>
</html>
